import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import java.io.ByteArrayInputStream;

@RestController
@RequestMapping("/api/pdf")
public class EmployeeController {

    @Autowired
    private EmployeeService employeeService;

    @GetMapping("/employee-report")
    public ResponseEntity<byte[]> getEmployeeReport() {
        ByteArrayInputStream bis = employeeService.generateEmployeeReport();

        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Disposition", "inline; filename=employee_report.pdf");

        return ResponseEntity.ok()
                .headers(headers)
                .contentType(MediaType.APPLICATION_PDF)
                .body(bis.readAllBytes());
    }
}
import com.lowagie.text.Document;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfWriter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.List;

@Service
public class EmployeeServiceImpl implements EmployeeService {

    @Autowired
    private EmployeeRepository employeeRepository;

    @Override
    public ByteArrayInputStream generateEmployeeReport() {
        List<Employee> employees = employeeRepository.findAll();
        Document document = new Document();
        ByteArrayOutputStream out = new ByteArrayOutputStream();

        try {
            PdfWriter.getInstance(document, out);
            document.open();

            document.add(new Paragraph("Employee Report"));
            document.add(new Paragraph(" ")); // Adding a blank line

            for (Employee emp : employees) {
                document.add(new Paragraph("ID: " + emp.getId()));
                document.add(new Paragraph("Name: " + emp.getName()));
                document.add(new Paragraph("Department: " + emp.getDepartment()));
                document.add(new Paragraph("Salary: $" + emp.getSalary()));
                document.add(new Paragraph(" ")); // Adding a blank line
            }

            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return new ByteArrayInputStream(out.toByteArray());
    }
}
import java.io.ByteArrayInputStream;

public interface EmployeeService {
    ByteArrayInputStream generateEmployeeReport();
}
import org.springframework.data.jpa.repository.JpaRepository;

public interface EmployeeRepository extends JpaRepository<Employee, Long> {
}

